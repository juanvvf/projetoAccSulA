public with sharing class contaTriggerBO {
		//declara uma lista para ser usada
	private List<Account> listaDeContas;
	private Map<Id, Account> oldAccountsMap;

		//metodo Public onde ficará todos os métodos ativos ou que estão em uso
     public contaTriggerBO(List<Account> accountListaParam) {
			//atribui a lista a this. para poder usar nos métodos
     	this.listaDeContas = accountListaParam;
     	checkNumeroTelefone();
     	atualizaPhonesNull();
     	atualizarAnnualRevenue();

	}


	private void checkNumeroTelefone(){
		System.debug('entrou no metodo');
		for(Account conta : this.listaDeContas){
			if(conta.Phone  == null && conta.Name.equals('teste 1')) {
				conta.Phone = '123-456';
				System.debug('telefone adicionado');

			}
		}
	}

	private void atualizaPhonesNull(){
		System.debug('atualizar todos que tem algo em comum');
		for(account upd_Phones : this.listaDeContas){
			if(upd_Phones.Phone == null ){
				upd_Phones.Phone = '99999999';
				System.debug('telefones preenchidos');	
			}
		}
	}

	private void atualizarAnnualRevenue(){
		System.debug('entrou no AnnualRevenue');
		for(Account upd_AnnualRevenue : this.listaDeContas){
			if(upd_AnnualRevenue.NumberOfEmployees  == 5){
				upd_AnnualRevenue.AnnualRevenue = 120000;
				System.debug('valores atualizados do AnnualRevenue');
			}
		}
	}




}